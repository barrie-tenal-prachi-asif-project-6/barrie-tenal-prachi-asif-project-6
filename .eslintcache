[{"C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\index.js":"1","C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\reportWebVitals.js":"2","C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\App.js":"3","C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Zoltar.js":"4","C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Maze.js":"5","C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Header.js":"6","C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Instructions.js":"7","C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Results.js":"8"},{"size":525,"mtime":1607275073226,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1607187768971,"results":"11","hashOfConfig":"10"},{"size":3130,"mtime":1607385019871,"results":"12","hashOfConfig":"10"},{"size":618,"mtime":1607358679232,"results":"13","hashOfConfig":"10"},{"size":9862,"mtime":1607385019902,"results":"14","hashOfConfig":"10"},{"size":228,"mtime":1607385019881,"results":"15","hashOfConfig":"10"},{"size":1728,"mtime":1607385019891,"results":"16","hashOfConfig":"10"},{"size":610,"mtime":1607385019902,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ybb17p",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\index.js",[],"C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\reportWebVitals.js",[],["36","37"],"C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\App.js",[],"C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Zoltar.js",[],"C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Maze.js",["38"],"import { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Maze extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            maze: [],\r\n            endPoint: false,\r\n        }\r\n    }\r\n\r\n\r\n    // a function that builds the maze & displays both the maze & coin onto the users page\r\n    createMazeAndCoin = () => {\r\n        // BUILDING MAZE ----------------------------------------\r\n        // build an example maze template within an array by using 0's (path) and 1's (wall)\r\n        const mazeLayout = [\r\n            1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\r\n            1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\r\n            1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\r\n            1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\r\n            1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\r\n            1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1,\r\n            1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1,\r\n            1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\r\n            1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\r\n            1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1,\r\n            1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\r\n            1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\r\n            1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\r\n            1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1,\r\n            1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,\r\n            1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\r\n            1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1,\r\n            1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\r\n            1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\r\n            1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\r\n            1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\r\n            1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1,\r\n            1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1,\r\n            1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\r\n            1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\r\n            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\r\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1\r\n        ]\r\n\r\n        // DISPLAYING MAZE & COIN ----------------------------------------\r\n        // store the div with a class of grid into a variable & clear any content located within the div\r\n        const mazeBox = document.querySelector('.maze');\r\n        while (mazeBox.firstChild) {\r\n            mazeBox.removeChild(mazeBox.firstChild);\r\n        }\r\n\r\n        // create an empty array\r\n        const mazeSquares = []\r\n\r\n        // loop through the mazeLayout array & push each value into the empty mazeSquares array \r\n        for (let i = 0; i < mazeLayout.length; i++) {\r\n            // give each square within the maze a height and width, append (a big no-no for this project but fine for the experimentation stages) to the maze div being rendered, and push them all into the mazeSquares array\r\n            const square = document.createElement('div');\r\n            mazeBox.appendChild(square);\r\n            mazeSquares.push(square);\r\n\r\n            // add visual layout to the maze by making the path appear pink & the walls appear black\r\n            if (mazeLayout[i] === 0) {\r\n                mazeSquares[i].classList.add('path');\r\n            } else if (mazeLayout[i] === 1) {\r\n                mazeSquares[i].classList.add('wall');\r\n            }\r\n        }\r\n\r\n        // display coin in the maze\r\n        let coinCurrentIndex = 1\r\n        mazeSquares[coinCurrentIndex].classList.add('coin');\r\n\r\n        // update the maze state with the new mazeSquares array\r\n        this.setState({\r\n            maze: mazeSquares\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n        console.log('FULL MAZE ARRAY HERE:', mazeSquares)\r\n\r\n        // MOVING COIN ----------------------------------------\r\n        // a function that moves the coin through the maze when the user presses the up, down, left, and right arrow keys\r\n        const moveCoin = (event) => {\r\n            \r\n            // remove the coin class from the coin's starting index\r\n            this.state.maze[coinCurrentIndex].classList.remove('coin');\r\n            \r\n            switch (event.keyCode) {\r\n                // if user hits the left arrow key:\r\n                    // (a) check to see if the index number that is one below the coin's current index number (ie: check the value of the index number to the 'left' of the coin's current index number) is actually a path (ie: ensure it is not a wall)\r\n                    // (b) if above condition is satisfied, subtract one from the coin's current index number\r\n                case 37:\r\n                    if (this.state.maze[coinCurrentIndex -1].classList.contains('path')) coinCurrentIndex -=1\r\n                    break\r\n\r\n                //  if user hits right arrow key:\r\n                    // (a) check to see if the index number that is one above the coin's current index number (ie: check the value of the index number to the 'right' of the coin's current index number) is actually a path\r\n                    // (b) if above condition is satisfied, add one to the coin's current index number\r\n                case 39:\r\n                    if (this.state.maze[coinCurrentIndex + 1].classList.contains('path')) coinCurrentIndex += 1\r\n                    break\r\n\r\n                //  if user hits up arrow key:\r\n                    // (a) check to see if the coin is able to continue moving up (ie: ensure the coin's current index number subtracted by 28 is equal to or greater than 0 - because if it's less than 0 and the user hits the up arrow, the coin will disappear off of the top edge of the maze as this means the coin is currently located along the top edge of the maze (index # 0 to 27))\r\n                    // (b) check to see if the index number that is 28 below the coin's current index number (ie: check the value of the index number that is directly 'on top' of the coin's current index number) is actually a path\r\n                    // (c) if both above conditions are satisfied, subtract 28 from the coin's current index number (ie: the width/height of the maze)\r\n                case 38:\r\n                    if (coinCurrentIndex - 28 >= 0 && this.state.maze[coinCurrentIndex - 28].classList.contains('path')) coinCurrentIndex -=28\r\n                    break\r\n\r\n                //  if user hits down arrow key:\r\n                    // (a) check to see if the coin is able to continue moving down (ie: ensure that 28 added to the coin's current index number is less than 28*28 (784) - because if it's more than 784 and the user hits the down arrow, the coin will disappear off of the bottom edge of the maze as this means the coin is currently located along the bottom edge of the maze (index # 756 to 784))\r\n                    // (b) check to see if the index number that is 28 above the coin's current index number (ie: check the value of the index number that is directly 'beneath' of the coin's current index number) is actually a path\r\n                    // (c) if both above condition is satisfied, add 28 to the coin's current index number (ie: the width/height of the maze)\r\n                case 40:\r\n                    if (coinCurrentIndex + 28 < 28 * 28 && mazeSquares[coinCurrentIndex + 28].classList.contains('path')) coinCurrentIndex += 28\r\n                    break\r\n\r\n            }\r\n\r\n            // add the coin class to the coin's new index\r\n            this.state.maze[coinCurrentIndex].classList.add('coin');\r\n\r\n\r\n\r\n            // \r\n            if (coinCurrentIndex === 782) {\r\n                this.setState({\r\n                    endPoint: true\r\n                })\r\n            }\r\n            console.log('COIN INDEX:', coinCurrentIndex);\r\n        }\r\n\r\n        // listen for the user to click one of the 4 arrow keys within the function that moves the coin \r\n        document.addEventListener('keydown', moveCoin);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        // document.addEventListener('keydown', moveCoin);\r\n        // this.createMazeAndCoin();\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n        return (\r\n            <>\r\n                <h2 onClick={this.createMazeAndCoin}>the maze is below, CLICK ME </h2>\r\n                <div className=\"maze\" onKeyDown={this.moveCoin}>\r\n                {/* <p>CLICK ME FOR MAZE</p> */}\r\n                {/* {this.createMazeAndCoin()} */}\r\n                </div>\r\n                {\r\n                    (this.state.endPoint)\r\n                    ?\r\n                    <Link to=\"/results\">\r\n                        <button>CLICK FOR RESULTS</button>\r\n                    </Link>\r\n                    : null\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Maze;","C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Header.js",[],"C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Instructions.js",[],"C:\\Users\\Tenal\\Desktop\\Web Dev\\Front-End\\bootcamp\\projects\\project-6\\barrie-tenal-prachi-asif-project-6\\src\\components\\Results.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":95,"column":13,"nodeType":"45","messageId":"46","endLine":126,"endColumn":14},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]